<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <!-- <arg name="speed" default="0.22"/> -->
    <arg name="model" default="burger"/>
    <arg name="speed" />
    <arg name="namespace" />
    <arg name="frame" />
    <param name="bool_goal_reached" value="true" />

    <!-- move_base -->
    <remap from="move_base_flex/TebLocalPlannerROS/global_plan" to="/dev/null" /> 
    <include file="$(find arena_bringup)/launch/testing/move_base/mbf_nav/costmap_nav.launch">
      <arg name="model" value="$(arg model)" />
      <arg name="speed" value="$(arg speed)" />
      <arg name="namespace" value="$(arg namespace)" />
      <arg name="frame" value="$(arg frame)" />
    </include>

    <group ns="move_base_flex">
      <rosparam file="$(find arena_bringup)/params/mbf/arena_planner_params.yaml"
        command="load" subst_value="True" />
      <rosparam
        file="$(find arena-simulation-setup)/robot/$(arg model)/configs/mbf/teb_local_planner_params.yaml"
        command="load" subst_value="True" />

      <param name="base_local_planner" value="TebLocalPlannerROS" />
      <param name="base_global_planner" value="NavfnROS" />

    </group>



    <!-- observation_packer -->
    <node pkg="observations" name="observation_packer" type="observation_packer" output="screen"/>

    <!-- Launch neural net ros wrapper -->
    <node pkg="arena-ros" type="play_agent.py" name="arena_node" output="screen"/>
    <!--<node pkg="arena-ros" type="arena_node_tb3.py" name="arena_node" output="screen" /> --> 
    <!-- spacial_horizon -->
    <node pkg="spacial_horizon" type="spacial_horizon_node" name="spacial_horizon_node" output="screen">
        <rosparam file="$(find arena-simulation-setup)/robot/$(arg model)/configs/mbf/plan_fsm_param.yaml" command="load" />
        <remap from="$(arg namespace)/goal" to="$(arg namespace)/move_base_simple/goal" />
        <remap from="/move_base/NavfnROS/make_plan" to="$(arg namespace)/move_base_flex/NavfnROS/make_plan" />
    </node>


    
     
</launch>
